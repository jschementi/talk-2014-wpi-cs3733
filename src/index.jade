doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title WPI CS3733

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Computer Science after college
        br
        div.me.round
        h3 <a href="http://schementi.com">Jimmy Schementi</a>

      section
        h2 A decade ago

      section
        img.bullet(src="images/wpi.png" style="height: 175px")
        h2.bullet CS 3733
        h3.bullet B-Term 2004

      section
        h2.bullet Exercise Logbook
        br
        ul
          li 4 components (data storage, rules, reports, and UI)
          li Approx 10 teams of 4-5 people
          li Each team had to build a component and ship it to the class
          li Also must deliver a completed product with 3 other components

      section(data-bespoke-backdrop='light-bg')
        img(src="images/landalka.png")

      section
        h2.bullet Biggest Risk?
        h3.bullet Integration
        br
        p.bullet So, eliminate the risk.

      section(data-bespoke-backdrop="light-bg")
        img(src="images/ezi.png")

      section
        img(src="images/rage-wolf.jpg" style="width:68%")

      section
        p.bullet Me: So, we want to do this thing...
        br
        p.bullet Gary: Well, you're not doing anything against the rules...
        br
        h2.bullet Me: Wait, what? Really!?

      section
        img(src="images/troll.png" style="width:59%")

      section(data-bespoke-backdrop='light-bg')
        img(src="images/elogbook-rules.png" style="width:59%")

      section(data-bespoke-backdrop="me-graduate")

      section(data-bespoke-backdrop="me-microsoft-badge")

      section
        p Gary: Well, that makes sense.

      section
        div.me.round
        br.bullet
        ul
          li
            span.year-range 2002-2006
            span B.S. Computer Science
          li
            span.year-range 2006-2007
            span M.S. Computer Science
          li
            span.year-range 2007-2010
            span Microsoft - Program Manager
          li
            span.year-range 2010-2012
            span Lab49 - Senior Engineer
          li
            span.year-range 2012-2014
            span Moven - Head of Engineering

      section(data-bespoke-backdrop="light-bg")
        img(src="images/assistments-logo.png")

      section
        img(src="images/ironruby-logo-383x95.png")

      section(data-bespoke-backdrop="moven-homepage")

      section
        h2 Codequak
          span &nbsp;Inc.
        h3 Build awesome stuff

      section
        h2 Leaf
        br
        img(src="images/leaf.jpg" style="width: 15em")

      section(data-bespoke-backdrop='emphatic')
        h2.bullet Interviewing

      section
        h2.bullet Algorithms
        ul
          li Memorize sorting algorithms (merge, quick, heap, etc)
          li Hash tables (basics, hash function, collisions)
          li Garbage collection (tracing vs. ref count)
          li Best/worse/average case performance and space complexity
          li Linked lists (reversing, detecting cycles)
          li Permutations & Combinations

      section
        h2.bullet Fibonacci
        pre.bullet
          code.language-javascript.
              def fib(n):
                  if n == 0:
                      return 0
                  if n <= 2:
                      return 1

                  return fib(n - 1) + fib(n - 2)

      section
        h2.bullet O(2^n)
        img(src="images/fibonacci_1.png")
        h3 (technically <code>O(1.618^n)</code>)

      section.tiny-code
        h3.bullet We can do <i>much</i> better
        pre.bullet
          code.language-javascript.
            cache = {}

            def fib(n):
                if n == 0:
                    return 0
                if n <= 2:
                    return 1

                value = cache.get(n)
                if value
                    return value

                value = fib(n - 1) + fib(n - 2)
                cache[n] = value
                return value

      section
        h2 O(n)
        img(src="images/fibonacci_2.png")
        h3 Call repeatedly, O(1)

      section
        h3.bullet Other interview questions/topics
        ul
          li Compute the angle between the hands of an analog clock.
          li Do two rectangles intersect?
          li Implement rand(7) with rand(5)
          li Database systems
          li Compilers
          li Network protocols (definitely HTTP)

      section
        h3 Expect
        h2 Whiteboard
        h3 and
        h2 Live coding
        br
        h3.bullet (+1 for the latter)

      section
        h2.bullet "Critical" "Thinking"
        ul
          li Design an elevator
          li Design a coffee maker that works in outer space
          li Eye color taboo
          li "No solution" problems

      section
        h2 <i>Full Stack</i>
        h3 vs.
        h2 <i>XYZ Tech</i>
        br
        p.bullet Breadth vs. depth?

      section
        h3 WPI prepares you to be a
        h2 full-stack engineer

      section(data-bespoke-backdrop='emphatic')
        h2 Break a leg!

      section
        h3 We are
        h2.bullet Software Engineers
        br
        ul
          li Programmers
          li Hackers
          li Coders
          li Project Managers
          li Designers
          li Developers
          li Scientists

      section(data-bespoke-backdrop='emphatic')
        h3 We are NOT
        h2 Ninjas
        h3 or
        h2 Rock stars
        br
        p (oh, recruiters...)

      section
        h3 We build things that have
        h2 never been built before

      section
        h2.bullet Software Engineering
        h3.bullet The study and application of engineering to the design, development, and maintenance of software.

      section
        h2.bullet Engineering
        h3.bullet The application of scientific, economic, social, and practical knowledge in order to invent, design, build, maintain, and improve structures, machines, devices, systems, materials and processes.
        ul
          li from the Latin ingenium, meaning "cleverness" and ingeniare, meaning "to contrive, devise"

      section(data-bespoke-backdrop='emphatic')
        h2 Development Process

      section
        h3.bullet Everyone does it differently
        ul
          li Waterfall
          li Agile (Scrum, XP, Lean, Kanban)
          li Conference-driven
          li Monkeys and typewriters

      section(data-bespoke-backdrop='emphatic')
        h3 Let's be honest
        h2 We don't know
        h2 what we're doing

      section
        h2 Pick the right process
        h3 for the project and team

      section
        h2 Shipping
        h3 is all that matters

      section
        h2.bullet The good things
        ul
          li Version control
          li Continuous Integration/Build/Deploy
          li Code Review
          li Automation (QA, Deployments)
          li DevOps
          li Velocity estimation (for those who need it)

      section.light-bg(data-bespoke-backdrop="light-bg")
        h3 Version Control
        br
        img(src="images/git.png" style="width: 35%")

      section
        h3 Code Review

      section
        h3.bullet Continuous Integration/Build/Deploy
        ul
          li Jenkins
          li TeamCity
          li Travis CI
      
      section
        h3 DevOps
        img(src="images/graphite.png" style="width: 70%")

      section
        h3.bullet Automation
        ul
          li Amazon Web Services
          li Heroku
          li Ancible/Chef/Puppet
          li Vagrant

      section(data-bespoke-backdrop='emphatic')
        h2 Actually building
        h2 the damn thing

      section
        h2 Stream all the things
        h3 Reader
        pre
          code.language-javascript.
            var readable = getReadableStreamSomehow();
            readable.on('data', function(chunk) {
              console.log('got %d bytes of data', chunk.length);
            });
            readable.on('end', function() {
              console.log('there will be no more data.');
            });

      section
        h3 Writer
        pre
          code.language-javascript.
            http.createServer(function (req, res) {
              res.write('hello, world');
              res.end();
            });

      section
        h2 Threads
        h3 Here be dragons

      section
        h2 Types Good
        pre
          code.language-javascript.
            type User struct {
              Username string
              Password string
            }
            func LoadUser(user *User) {
              // knows what fields a user has
            }
      
      section
        h3 Anonymous types evil
        pre
          code.language-javascript.
            function loadUser(user) {
              // WTF is a user?
            }

      section
        h2 Learn many many programming languages
      
      section
        h2 "Frameworks"
        ul
          li Don't stress about them
      
      section
        h3 Just build great apps

      section(data-bespoke-backdrop='emphatic')
        p(style="font-size: 4em") <code>});</code>

      section
        div.me.round
        h3 Jimmy Schementi
        br
        p <a href="http://schementi.com">http://schementi.com</a>
        p @jschementi


    script(src='build/build.js')
